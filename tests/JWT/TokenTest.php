<?php
/**
 * Created by PhpStorm.
 * User: dilsonrabelo
 * Date: 30/08/16
 * Time: 08:55
 */

namespace Tests\JWT;

use Namshi\JOSE\JWS;
use Namshi\JOSE\SimpleJWS;
use Tests\BaseUnitTests;

class TokenTest extends BaseUnitTests
{

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @test
     */
    public function shouldGenerateToken() {
        $payload = [
            'sub' => 1234567890,
            'name' => 'John Doe',
            'admin' => true,
            'iat' => 1472560284,
        ];

        $header = [
            'alg' => 'HS256',
            'typ' => 'JWT'
        ];

        $jwt = new SimpleJWS($header);
        $jwt->setPayload($payload);
        $jwt->sign('secret');

        $token = $jwt->getTokenString();

        $jwt = JWS::load($token);

        $this->assertTrue($jwt->verify('secret'));
    }

    /**
     * @test
     */
    public function shouldValidateTokenExpired() {
        $dateTime = new \DateTime('yesterday');

        $payload = [
            'sub' => 1234567890,
            'name' => 'John Doe',
            'admin' => true,
            'iat' => 1472560284,
            'exp' => $dateTime->getTimestamp()
        ];

        $header = [
            'alg' => 'HS256',
            'typ' => 'JWT'
        ];

        $jwt = new SimpleJWS($header);
        $jwt->setPayload($payload);
        $jwt->sign('secret');

        $token = $jwt->getTokenString();

        $jws = JWS::load($token);
        $jws->verify('secret');

        $jwt->setHeader($jws->getHeader());
        $jwt->setPayload($jws->getPayload());

        $this->assertTrue($jwt->isExpired());
    }

}